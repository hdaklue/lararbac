name: Laravel & PHP Compatibility Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC to catch compatibility issues early
    - cron: '0 2 * * 0'

jobs:
  compatibility-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3']
        laravel: ['11.*', '12.*']
        dependency-version: [prefer-lowest, prefer-stable]
        include:
          # Test specific Laravel versions
          - php: '8.2'
            laravel: '11.0.*'
            dependency-version: prefer-stable
          - php: '8.3' 
            laravel: '12.0.*'
            dependency-version: prefer-stable

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} (${{ matrix.dependency-version }})

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Setup problem matchers
      run: |
        echo "::add-matcher::${{ runner.tool_cache }}/php.json"
        echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Install dependencies
      run: |
        composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
        composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

    - name: Display environment info
      run: |
        php -r "
        require 'vendor/autoload.php';
        echo 'PHP Version: ' . PHP_VERSION . PHP_EOL;
        echo 'Laravel Version: ' . \Illuminate\Foundation\Application::VERSION . PHP_EOL;
        echo '✓ Environment info displayed!' . PHP_EOL;
        "

    - name: List installed packages
      run: composer show --direct

    - name: Execute tests
      run: composer test

    - name: Execute linting
      run: composer lint

  minimum-versions:
    runs-on: ubuntu-latest
    name: Test minimum supported versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Install minimum dependencies
      run: |
        composer require "laravel/framework:^11.0" --no-interaction --no-update
        composer update --prefer-lowest --prefer-dist --no-interaction

    - name: Run tests with minimum versions
      run: |
        composer test
        echo "✓ Minimum version compatibility confirmed"

  latest-versions:
    runs-on: ubuntu-latest
    name: Test latest supported versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Install latest dependencies
      run: |
        composer require "laravel/framework:^12.0" --no-interaction --no-update
        composer update --prefer-stable --prefer-dist --no-interaction

    - name: Run tests with latest versions
      run: |
        composer test
        echo "✓ Latest version compatibility confirmed"

  code-coverage:
    runs-on: ubuntu-latest
    name: Code Coverage

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: xdebug

    - name: Install dependencies
      run: |
        composer require "laravel/framework:^11.0" --no-interaction --no-update
        composer update --prefer-stable --prefer-dist --no-interaction

    - name: Execute tests with coverage
      run: composer test-coverage

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
        verbose: true